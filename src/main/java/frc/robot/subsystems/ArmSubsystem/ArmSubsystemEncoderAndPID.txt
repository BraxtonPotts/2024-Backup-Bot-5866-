package frc.robot.subsystems.ArmSubsystem;

import com.revrobotics.CANSparkMax;
import com.revrobotics.SparkPIDController;
import com.revrobotics.SparkRelativeEncoder;
import com.revrobotics.CANSparkBase.ControlType;
import com.revrobotics.CANSparkLowLevel.MotorType;

import edu.wpi.first.math.controller.PIDController;
import edu.wpi.first.wpilibj2.command.PIDCommand;

public class ArmSubsystemEncoderAndPID {
    
    private CANSparkMax armMoter_R;
    private CANSparkMax armMoter_L;
    private PIDController armPidController;
    private SparkRelativeEncoder armEncoder;

    public void ArmIO (int IDRightMoter, int IDLeftMoter) {

        armMoter_R = new CANSparkMax(IDRightMoter, MotorType.kBrushless);
        armMoter_L = new CANSparkMax(IDLeftMoter, MotorType.kBrushless);
    
        armMotor_l.setIdleMode(CANSparkMax.IdleMode.kBrake);
        armMotor_r.setIdleMode(CANSparkMax.IdleMode.kBrake);
        isBrake = true;

        armMotor_r.setInverted(true);
    
    
    }
}