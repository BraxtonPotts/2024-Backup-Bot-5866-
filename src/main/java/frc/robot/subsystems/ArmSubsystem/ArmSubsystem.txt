package frc.robot.subsystems.ArmSubsystem;

import edu.wpi.first.math.util.Units;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import frc.robot.subsystems.ArmSubsystem.ArmSubsystemIO.ArmIOInputs;

public class ArmSubsystem {
 
    private final ArmIOInputs inputs = new ArmIOInputs();

    private double ARM_MAX_ANGLE = Units.degreesToRadians(283);
    private double ARM_MIN_ANGLE = Units.degreesToRadians(35);

    public void setArmAngle(double angle) {
        if (angle > ARM_MAX_ANGLE) {
          System.out.println("Arm angle is too big");
        } else if (angle < ARM_MIN_ANGLE) {
          System.out.println("Arm angle is too small");
        }
        else {
          ArmSubsystemIO.setAngle(angle);
        }

    }

    public void setPosition(String position) {
        if (position.equals("INTAKE")) {
            setArmAngle(Units.degreesToRadians(38));
        } else if (position.equals("AMP")) {
            setArmAngle(Units.degreesToRadians(171));
        } else if (position.equals("SHOOT")) {
            setArmAngle(Units.degreesToRadians(282));
        } else if (position.equals("LATCHSTANDBY")) {
            setArmAngle(Units.degreesToRadians(171));
        } else if (position.equals("LATCH")) {
            setArmAngle(Units.degreesToRadians(217));
        } else if (position.equals("LATCHAPROCH")){
            setArmAngle(Units.degreesToRadians(105));
        }else if (position.equals("CLIMB")){
            setArmAngle(Units.degreesToRadians(277));
        }else if (position.equals("HI_INTAKE")){
            setArmAngle(Units.degreesToRadians(151));
        }
    }
}
